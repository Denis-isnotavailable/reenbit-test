{"version":3,"file":"static/js/776.f648148c.chunk.js","mappings":"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","sources":["components/CharacterItem/CharacterItem.styled.jsx","components/CharacterItem/CharacterItem.jsx","components/CharactersList/CharactersList.styled.jsx","redux/selectors.js","components/CharactersList/CharactersList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/MainPage/MainPage.styled.jsx","components/GoogleAuth/GoogleAuth.styled.jsx","components/GoogleAuth/GoogleAuth.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const CharacterItemStyled = styled.li`\n    :not(:last-child) {\n        margin-bottom: 32px;\n    }    \n\n    background: #FFFFFF;\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14);\n    border-radius: 4px;\n\n    @media (min-width: 768px) {\n        :not(:last-child) {\n        margin-bottom: 0;\n    }\n    }\n`;\n\nexport const CharacterImageThumbStyled = styled.div`\n    width: 312px;\n    height: 232px;\n\n    overflow: hidden;\n\n    img {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media (min-width: 1020px) {\n        width: 240px;\n        height: 168px;\n    }\n`;\n\nexport const DescriptionThumbStyled = styled.div`\n    padding: 12px 16px;\n    font-style: normal;\n    line-height: 1.5;\n\n    h2 {\n        max-width: 208px;\n        margin-bottom: 1px;\n\n        font-weight: 500;\n        font-size: 20px;        \n        letter-spacing: 0.15px;\n\n        color: rgba(0, 0, 0, 0.87);        \n    }\n\n    p {\n        font-weight: 400;\n        font-size: 14px;        \n        letter-spacing: 0.25px;\n\n        color: rgba(0, 0, 0, 0.6);\n    }\n`;\n\n","import { NavLink } from \"react-router-dom\";\n\nimport { CharacterImageThumbStyled, CharacterItemStyled, DescriptionThumbStyled } from \"./CharacterItem.styled\";\n\n\nconst CharacterItem = ({character}) => {\n\n    return (\n        <CharacterItemStyled>\n            <NavLink to={`${character.id}`} style={{textDecoration: \"none\"}}>\n                <CharacterImageThumbStyled>\n                    <img src={character.image} alt=\"characterAvatar\" width={312} height={232} />\n                </CharacterImageThumbStyled>\n                \n                <DescriptionThumbStyled>\n                    <h2>{character.name}</h2>\n\n                    <p>{character.species}</p>\n                </DescriptionThumbStyled>\n            </NavLink>              \n        </CharacterItemStyled>\n    );\n}\n\nexport default CharacterItem;","import styled from \"styled-components\";\n\n\nexport const CharactersListStyled = styled.ul`\n    width: 312px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 32px;\n    padding-left: 24px;\n    padding-right: 24px;\n\n    @media (min-width: 768px) {\n        width: 656px;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 32px;\n    }\n\n    @media (min-width: 1020px) {\n        width: 1020px;\n        gap: 24px 20px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n\n`;\n\nexport const LoadingStyled = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    width: 200px;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectIsLoading = state => state.charactersReducer.isLoading;\nexport const selectCharacters = state => state.charactersReducer.characters;\n\nexport const selectSearch = state => state.searchReducer.search;\n\nexport const selectAuth = state => state.authReducer;\n\nexport const selectFilteredCharacters = createSelector(\n    [selectCharacters, selectSearch], (characters, search) => {\n\n        return [...characters]\n            .sort((firstChar, secondChar) => firstChar.name.localeCompare(secondChar.name))\n            .filter(char => char.name.toLowerCase().includes(search.toLowerCase()));\n    }\n);\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchCharacters } from \"redux/operations\";\nimport CharacterItem from \"components/CharacterItem/CharacterItem\";\nimport { CharactersListStyled } from \"./CharactersList.styled\";\nimport { selectFilteredCharacters } from \"redux/selectors\";\n\n\nconst CharactersList = () => {\n    const dispatch = useDispatch();\n    const characters = useSelector(selectFilteredCharacters);   \n\n    useEffect(() => { \n        dispatch(fetchCharacters());\n    }, [dispatch]);\n\n    return (\n        <CharactersListStyled>\n            {\n                characters.length === 0 ? \"There are no characters here...\" :\n                characters.map(character =>\n                    <CharacterItem\n                        key={character.id}\n                        character={character}\n                    />)\n            }\n        </CharactersListStyled>\n                \n    );\n}\n\nexport default CharactersList;","import styled from \"styled-components\";\n\n\nexport const SearchStyled = styled.div`\n    position: relative;\n    width: 312px;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 32px;\n\n    div {\n        position: absolute;\n        top: 16px;\n        left: 16px;\n    }\n\n    input {\n        width: 246px;\n        height: 22px;\n        padding: 16px 16px 16px 48px;\n        border: 1px solid rgba(0, 0, 0, 0.5);\n        border-radius: 8px;\n\n        font-style: normal;\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 150%;\n\n        color: rgba(0, 0, 0, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        width: 656px;\n\n        input {\n            width: 590px;\n        }\n    }\n\n    @media (min-width: 1020px) {\n        width: 1020px;\n        margin-bottom: 51px;\n\n        input {\n            width: 954px;\n        }\n    }\n`;","import { AiOutlineSearch } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { SearchStyled } from \"./Search.styled\";\nimport { selectSearch } from \"redux/selectors\";\nimport { searchSet } from \"redux/searchSlice\";\n\n\nconst Search = () => {\n    const search = useSelector(selectSearch)\n    const dispatch = useDispatch();    \n\n    const setSearchValue = (value) => {       \n        dispatch(searchSet(value));\n    }\n\n    return (\n        <SearchStyled>\n            <div><AiOutlineSearch size={24} /></div>\n            <input\n                type=\"text\"\n                placeholder=\"Filter by name...\"\n                value={search}\n                onChange={e => setSearchValue(e.target.value)}\n            />\n       </SearchStyled>\n    );\n}\n\nexport default Search;","import styled from \"styled-components\";\nimport logoMob from \"../../images/logo-mob.png\";\nimport logoDeskTop from \"../../images/logo-dt.png\";\n\nexport const MainPageStyled = styled.div`\n    \n`;\n\nexport const LogoBoxStyled = styled.div`\n    width: 312px;\n    height: 104px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 92px;\n    margin-bottom: 32px;\n    background-image: url(${logoMob});\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    @media (min-width: 768px) {\n        width: 600px;\n        height: 200px;\n        margin-top: 86px;\n        margin-bottom: 16px;\n        background-image: url(${logoDeskTop});\n    }\n`;\n\n","import styled from \"styled-components\";\n\n\nexport const GoogleAuthStyled = styled.div`\n    position: absolute;\n    top: 12px;\n    left: 24px;\n\n    width: 250px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #b7b7c0;       \n    }\n`;\n\nexport const NameBoxStyled = styled.div`\n    position: absolute;\n    top: 12px;\n    left: 24px;\n\n    width: 200px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.5) 0px 1px 2px;     \n    font-size: 19px; \n    margin: 5px;\n    padding: 0px 10px;\n`;\n\nexport const LogOutStyled = styled.button`\n    position: absolute;\n    top: 12px;\n    left: 250px;\n\n    width: 80px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    border: none;\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.5) 0px 1px 2px;     \n    font-size: 19px; \n    margin: 5px;\n    padding: 0px 10px;\n    background-color: #fff;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #b7b7c0;       \n    }\n`;","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport { LoginSocialGoogle } from \"reactjs-social-login\";\n\nimport { authSet } from \"redux/authSlice\";\nimport { selectAuth } from \"redux/selectors\";\nimport { GoogleAuthStyled, LogOutStyled, NameBoxStyled } from \"./GoogleAuth.styled\";\n\n\nconst GoogleAuth = () => {\n    const dispatch = useDispatch();\n    const auth = useSelector(selectAuth);\n\n    const handleLogOut = () => {\n        dispatch(authSet({\n            isAuth: false,\n            userName: \"\",\n            token: null\n        }))\n    }\n\n    return (\n        <>\n            {auth.isAuth ?\n                <>\n                    <NameBoxStyled>Hello, {auth.userName}</NameBoxStyled>\n                    <LogOutStyled type=\"button\" onClick={handleLogOut}>LogOut</LogOutStyled>\n                </>\n                :\n                <GoogleAuthStyled>\n                    <LoginSocialGoogle\n                        client_id={\"177529147775-05t9k3q5s9btalddu59c20b1j1mtr0sc.apps.googleusercontent.com\"}\n                        scope=\"openid profile email\"\n                        discoveryDocs=\"claims_supported\"\n                        access_type=\"offline\"\n                        onResolve={({ provider, data }) => {\n                            dispatch(authSet({\n                                isAuth: true,\n                                userName: data.name,\n                                token: data.access_token\n                            }))\n                            // console.log(provider, data);\n                        }}\n                        onReject={(err) => {\n                        console.log(err);\n                        }}\n                    >\n                        <GoogleLoginButton />\n                    </LoginSocialGoogle>\n                </GoogleAuthStyled>}\n        </>\n               \n    );\n}\n\nexport default GoogleAuth;","\nimport CharactersList from \"components/CharactersList/CharactersList\";\nimport Search from \"components/Search/Search\";\nimport { LogoBoxStyled, MainPageStyled } from \"./MainPage.styled\";\nimport GoogleAuth from \"components/GoogleAuth/GoogleAuth\";\n\n\n\nconst MainPage = () => { \n\n    return (\n        <MainPageStyled>\n            <GoogleAuth />\n            <LogoBoxStyled />\n            <Search />\n            <CharactersList />\n        </MainPageStyled>        \n    );\n}\n\nexport default MainPage;"],"names":["CharacterItemStyled","styled","CharacterImageThumbStyled","DescriptionThumbStyled","character","to","id","style","textDecoration","src","image","alt","width","height","name","species","CharactersListStyled","selectSearch","state","searchReducer","search","selectAuth","authReducer","selectFilteredCharacters","createSelector","charactersReducer","characters","sort","firstChar","secondChar","localeCompare","filter","char","toLowerCase","includes","dispatch","useDispatch","useSelector","useEffect","fetchCharacters","length","map","SearchStyled","size","type","placeholder","value","onChange","e","target","searchSet","MainPageStyled","LogoBoxStyled","logoMob","logoDeskTop","GoogleAuthStyled","NameBoxStyled","LogOutStyled","auth","isAuth","userName","onClick","authSet","token","client_id","scope","discoveryDocs","access_type","onResolve","provider","data","access_token","onReject","err","console","log","GoogleLoginButton"],"sourceRoot":""}