{"version":3,"file":"static/js/965.d764f4cf.chunk.js","mappings":"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","sources":["components/CharacterItem/CharacterItem.styled.jsx","components/CharacterItem/CharacterItem.jsx","components/CharactersList/CharactersList.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/CharactersList/CharactersList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/MainPage/MainPage.styled.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const CharacterItemStyled = styled.li`\n    :not(:last-child) {\n        margin-bottom: 32px;\n    }    \n\n    background: #FFFFFF;\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14);\n    border-radius: 4px;\n\n    @media (min-width: 768px) {\n        :not(:last-child) {\n        margin-bottom: 0;\n    }\n    }\n`;\n\nexport const CharacterImageThumbStyled = styled.div`\n    width: 312px;\n    height: 232px;\n\n    overflow: hidden;\n\n    img {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media (min-width: 1020px) {\n        width: 240px;\n        height: 168px;\n    }\n`;\n\nexport const DescriptionThumbStyled = styled.div`\n    padding: 12px 16px;\n    font-style: normal;\n    line-height: 1.5;\n\n    h2 {\n        max-width: 208px;\n        margin-bottom: 1px;\n\n        font-weight: 500;\n        font-size: 20px;        \n        letter-spacing: 0.15px;\n\n        color: rgba(0, 0, 0, 0.87);        \n    }\n\n    p {\n        font-weight: 400;\n        font-size: 14px;        \n        letter-spacing: 0.25px;\n\n        color: rgba(0, 0, 0, 0.6);\n    }\n`;\n\n","import { NavLink } from \"react-router-dom\";\n\nimport { CharacterImageThumbStyled, CharacterItemStyled, DescriptionThumbStyled } from \"./CharacterItem.styled\";\n\n\nconst CharacterItem = ({character}) => {\n\n    return (\n        <CharacterItemStyled>\n            <NavLink to={`${character.id}`} style={{textDecoration: \"none\"}}>\n                <CharacterImageThumbStyled>\n                    <img src={character.image} alt=\"characterAvatar\" width={312} height={232} />\n                </CharacterImageThumbStyled>\n                \n                <DescriptionThumbStyled>\n                    <h2>{character.name}</h2>\n\n                    <p>{character.species}</p>\n                </DescriptionThumbStyled>\n            </NavLink>              \n        </CharacterItemStyled>\n    );\n}\n\nexport default CharacterItem;","import styled from \"styled-components\";\n\n\nexport const CharactersListStyled = styled.ul`\n    width: 312px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 32px;\n    padding-left: 24px;\n    padding-right: 24px;\n\n    @media (min-width: 768px) {\n        width: 656px;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 32px;\n    }\n\n    @media (min-width: 1020px) {\n        width: 1020px;\n        gap: 24px 20px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n\n`;\n\nexport const LoadingStyled = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    width: 200px;\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectIsLoading = state => state.charactersReducer.isLoading;\nexport const selectCharacters = state => state.charactersReducer.characters;\n\nexport const selectSearch = state => state.searchReducer.search;\n\nexport const selectFilteredCharacters = createSelector(\n    [selectCharacters, selectSearch], (characters, search) => {\n\n        return [...characters]\n            .sort((firstChar, secondChar) => firstChar.name.localeCompare(secondChar.name))\n            .filter(char => char.name.toLowerCase().includes(search.toLowerCase()));\n    }\n);\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchCharacters } from \"redux/operations\";\nimport CharacterItem from \"components/CharacterItem/CharacterItem\";\nimport { CharactersListStyled } from \"./CharactersList.styled\";\nimport { selectFilteredCharacters } from \"redux/selectors\";\n\n\nconst CharactersList = () => {\n    const dispatch = useDispatch();\n    const characters = useSelector(selectFilteredCharacters);\n    // const isLoading = useSelector(selectIsLoading);\n\n\n    useEffect(() => { \n        dispatch(fetchCharacters());\n    }, [dispatch]);\n\n    // console.log(characters);\n\n    return (\n        <CharactersListStyled>\n            {\n                characters.length === 0 ? \"There are no characters here...\" :\n                characters.map(character =>\n                    <CharacterItem\n                        key={character.id}\n                        character={character}\n                    />)\n            }\n        </CharactersListStyled>\n                \n    );\n}\n\nexport default CharactersList;","import styled from \"styled-components\";\n\n\nexport const SearchStyled = styled.div`\n    position: relative;\n    width: 312px;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 32px;\n\n    div {\n        position: absolute;\n        top: 16px;\n        left: 16px;\n    }\n\n    input {\n        width: 246px;\n        height: 22px;\n        padding: 16px 16px 16px 48px;\n        border: 1px solid rgba(0, 0, 0, 0.5);\n        border-radius: 8px;\n\n        font-style: normal;\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 150%;\n\n        color: rgba(0, 0, 0, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        width: 656px;\n\n        input {\n            width: 590px;\n        }\n    }\n\n    @media (min-width: 1020px) {\n        width: 1020px;\n        margin-bottom: 51px;\n\n        input {\n            width: 954px;\n        }\n    }\n`;","import { SearchStyled } from \"./Search.styled\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearch } from \"redux/selectors\";\nimport { searchSet } from \"redux/searchSlice\";\n\n\nconst Search = () => {\n    const search = useSelector(selectSearch)\n    const dispatch = useDispatch();    \n\n    const setSearchValue = (value) => {       \n        dispatch(searchSet(value));\n    }\n\n    return (\n        <SearchStyled>\n            <div><AiOutlineSearch size={24} /></div>\n            <input\n                type=\"text\"\n                placeholder=\"Filter by name...\"\n                value={search}\n                onChange={e => setSearchValue(e.target.value)}\n            />\n       </SearchStyled>\n    );\n}\n\nexport default Search;","import styled from \"styled-components\";\n\n\nexport const MainPageStyled = styled.div`\n    \n`;\n\nexport const LogoBoxStyled = styled.div`\n    width: 312px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 92px;\n    margin-bottom: 32px;\n\n    @media (min-width: 768px) {\n        width: 600px;\n        margin-top: 86px;\n        margin-bottom: 16px;\n    }\n`;\n\n","import CharactersList from \"components/CharactersList/CharactersList\";\nimport Search from \"components/Search/Search\";\nimport { LogoBoxStyled, MainPageStyled } from \"./MainPage.styled\";\nimport logoMob from \"../../images/logo-mob.png\";\nimport { useState } from \"react\";\nimport logoDeskTop from \"../../images/logo-dt.png\"\n\n\nconst MainPage = () => {\n    // eslint-disable-next-line no-unused-vars\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n    return (\n        <MainPageStyled>\n            <LogoBoxStyled>\n                <img src={windowHeight <= 767 ? logoMob : logoDeskTop} alt=\"logo\" />\n            </LogoBoxStyled>\n            <Search />\n            <CharactersList />\n        </MainPageStyled>        \n    );\n}\n\nexport default MainPage;"],"names":["CharacterItemStyled","styled","CharacterImageThumbStyled","DescriptionThumbStyled","character","to","id","style","textDecoration","src","image","alt","width","height","name","species","CharactersListStyled","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectSearch","state","searchReducer","search","selectFilteredCharacters","charactersReducer","characters","sort","firstChar","secondChar","localeCompare","filter","char","toLowerCase","includes","dispatch","useDispatch","useSelector","useEffect","fetchCharacters","SearchStyled","size","type","placeholder","onChange","e","target","searchSet","MainPageStyled","LogoBoxStyled","useState","window","innerHeight","windowHeight","logoMob","logoDeskTop"],"sourceRoot":""}